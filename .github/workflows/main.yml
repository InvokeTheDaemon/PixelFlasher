# This is a workflow to build a package code push.
name: Build Windows and Linux Executables

# Controls when the workflow will run
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  # # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:
  #   inputs:
  #     tags:
  #       description: 'Build tags'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs https://github.com/JackMcKew/pyinstaller-action-windows
      - name: Package Windows Application
        uses: JackMcKew/pyinstaller-action-windows@main
        with:
          path: .
          spec: build-on-win.spec

      # Upload artifcats Windows
      - uses: actions/upload-artifact@v3
        id: upload_artifacts_windows
        with:
          name: PixelFlasher.exe
          path: dist/windows

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.11.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          name: Release ${{ github.ref }}
          draft: false
          prerelease: true


      - name: Upload Windows Release Asset
        id: upload-windows-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/windows/PixelFlasher.exe
          asset_name: PixelFlasher.exe
          asset_content_type: application/zip

      # # Runs https://github.com/badabing2005/pyinstaller-action-linux
      # - name: Package Linux Application
      #   uses: badabing2005/pyinstaller-action-linux@main
      #   with:
      #     path: .
      #     spec: build-on-linux.spec

      # # Upload artifcats linux
      # - uses: actions/upload-artifact@v3
      #   id: upload_artifacts_linux
      #   with:
      #     name: PixelFlasher
      #     path: dist/linux

      # - name: Upload Linux Release Asset
      #   id: upload-linux-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./dist/linux/PixelFlasher
      #     asset_name: PixelFlasher-Ubuntu
      #     asset_content_type: application/zip
